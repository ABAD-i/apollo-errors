{"version":3,"sources":["../src/index.js"],"names":["errorMap","Map","DELIMITER","serializeName","arr","reduce","str","val","length","toString","deserializeName","name","split","ApolloError","message","time_thrown","Date","toISOString","data","options","t","arguments","thrown_at","d","Object","assign","m","opts","JSON","stringify","_name","_humanized_message","_time_thrown","_data","_locations","showLocations","locations","_path","showPath","path","error","createError","e","bind","set","formatError","originalError","returnNull","undefined","parse","CustomError","get","serialize","isInstance"],"mappings":"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","file":"index.js","sourcesContent":["import ExtendableError from 'es6-error';\n\nconst errorMap = new Map();\n\nconst DELIMITER = '/::/';\n\nconst serializeName = (arr = []) => arr\n  .reduce((str, val) => (\n    `${str.length > 0 ? str + DELIMITER : str}${val.toString ? val.toString() : val}`\n  ), '');\nconst deserializeName = (name = '') => name.split(DELIMITER);\n\nclass ApolloError extends ExtendableError {\n  constructor (name, {\n    message,\n    time_thrown = (new Date()).toISOString(),\n    data = {},\n    options = {},\n  }) {\n    const t = (arguments[2] && arguments[2].thrown_at) || time_thrown;\n    const d = Object.assign({}, data, ((arguments[2] && arguments[2].data) || {}));\n    const m = (arguments[2] && arguments[2].message) || message;\n    const opts = Object.assign({}, options, ((arguments[2] && arguments[2].options) || {}));\n\n    super(serializeName([\n      name,\n      t,\n      (m !== message ? m : 'null'),\n      Object.assign({}, d, {\n        toString: () => JSON.stringify(d)\n      }),\n    ]));\n\n    this._name = name;\n    this._humanized_message = m || '';\n    this._time_thrown = t;\n    this._data = d;\n    this._locations = (opts.showLocations && arguments[2] && arguments[2].locations)\n    this._path = (opts.showPath && arguments[2] && arguments[2].path);\n  }\n  serialize () {\n    const name = this._name;\n    const message = this._humanized_message;\n    const time_thrown = this._time_thrown;\n    const data = this._data;\n    const locations = this._locations;\n    const path = this._path;\n    let error = {\n      message,\n      name,\n      time_thrown,\n      data,\n    };\n    if (locations) error.locations = locations;\n    if (path) error.path = path;\n    return error;\n  }\n}\n\nexport const createError = (name, data = { message: 'An error has occurred', options }) => {\n  const e = ApolloError.bind(null, name, data);\n  errorMap.set(name, e);\n  return e;\n};\n\nexport const formatError = (originalError, returnNull = false) => {\n  const [ name, thrown_at, m, d ] = deserializeName(originalError.message);\n  const { locations, path } = originalError;\n  const data = d !== undefined ? JSON.parse(d) : {};\n  if (!name) return returnNull ? null : originalError;\n  const CustomError = errorMap.get(name);\n  if (!CustomError) return returnNull ? null : originalError;\n  const error = new CustomError({\n    message: m === 'null' ? undefined : m,\n    thrown_at,\n    data,\n    locations,\n    path,\n  });\n  return error.serialize();\n};\n\nexport const isInstance = e => e instanceof ApolloError;\n"]}